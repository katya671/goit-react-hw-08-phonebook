{"version":3,"file":"static/js/703.7f8b5f0f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/Form.module.css?cb52","webpack://react-homework-template/./src/pages/Container.module.css?faf4"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { useState } from 'react';\nimport css from '../Form.module.css';\nimport { toast } from 'react-toastify';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contactExists = isContactExist(name);\n    if (contactExists) {\n      toast.info(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    toast.success(`${name} has been added to contacts`);\n    setName('');\n    setNumber('');\n  };\n\n  const isContactExist = name => {\n    return contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n        required\n      />\n      <label htmlFor=\"number\">Number</label>\n      <input\n        type=\"tel\"\n        id=\"number\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={handleChange}\n        required\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","// extracted by mini-css-extract-plugin\nexport default {\"delete-btn\":\"Contact_delete-btn__dlH4h\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport PropTypes from 'prop-types';\nimport css from './Contact.module.css';\nimport { toast } from 'react-toastify';\n\nconst Contact = ({ contact }) => {\n  const { name, number, id } = contact;\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    toast.success(`${name} has been deleted from contacts`);\n  };\n\n  return (\n    <>\n      {name} : {number}\n      <button\n        className={css['delete-btn']}\n        type=\"button\"\n        onClick={handleDelete}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nexport default Contact;\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport css from './ContactList.module.css';\nimport Contact from 'components/Contact/Contact';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.list}>\n      {visibleContacts.map(contact => (\n        <li className={css.item} key={contact.id}>\n          <Contact contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filterSlice';\nimport css from '../Form.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <div className={css.form}>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport css from '../Container.module.css';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectIsLoggedIn,\n} from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport Loader from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    isLoggedIn && dispatch(fetchContacts());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={css.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n      {isLoading && !error && <Loader />}\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__MCyoe\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__x47Yc\",\"title\":\"Container_title__0ml7u\",\"message\":\"Container_message__TFde-\",\"link\":\"Container_link__tjTH5\"};"],"names":["dispatch","useDispatch","contacts","useSelector","selectContacts","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","event","_event$target","target","value","isContactExist","some","contact","toLowerCase","_jsxs","className","css","onSubmit","preventDefault","toast","concat","addContact","children","_jsx","htmlFor","type","id","pattern","title","onChange","required","_ref","_Fragment","onClick","deleteContact","visibleContacts","selectVisibleContacts","map","Contact","filter","selectFilter","changeFilter","isLoading","selectIsLoading","error","selectError","isLoggedIn","selectIsLoggedIn","useEffect","fetchContacts","ContactForm","Filter","ContactList","Loader"],"sourceRoot":""}